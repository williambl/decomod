plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

repositories {
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        url = 'https://ueaj.dev/maven'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:5.2.2"
    modImplementation "net.devtech:arrp:0.6.7"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        data {
            inherit server
            setConfigName("Fabric Data Generation")
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${project.mod_id}"
            ideConfigGenerated(true)
            runDir("build/datagen")
        }
    }

    accessWidenerPath = file("${project(':Common').projectDir.path}/src/main/resources/decomod.accesswidener")
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
